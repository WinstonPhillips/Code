Microsoft (R) Macro Assembler Version 6.15.8803		    04/03/19 20:19:12
interpolate_driver.asm					     Page 1 - 1


				; Written by: Winston Phillips T00212039 ;

				.386

				.MODEL FLAT

				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD

				.STACK  4096            ; reserve 4096-byte stack


 00000000			.DATA

 00000000 0000			NUM_POINTS			  WORD ? 	; for iterating through array

 00000002 0000			POLYNOMIAL_DEGREE	  WORD ? ; stores the degree of the polynomial

 00000004 00000000		X_COORDINATE		  REAL4 ? ; x-coordinate of the desired interpolated y

 00000008 3727C5AC		tol					  REAL4 0.00001  ; for sorting points

 0000000C  00000028 [		POINTS_ARRAY  		  REAL4 40 DUP(?)	; matrix for holding our points
	    00000000
	   ]

 000000AC 00000000		inputPoint 			  REAL4 ?	; for atof float number
					
 000000B0 20 00			inputPrompt 		  BYTE 	" ", 0 ; for setting elements in MATRIX

 000000B2  0000000D [		inputString		  	  BYTE 13  DUP(?)	; string for atof and ftoa procedures
	    00
	   ]

 000000BF 53 6F 72 74 65	sorted_prompt		  BYTE "Sorted Points: ", 0
	   64 20 50 6F 69
	   6E 74 73 3A 20
	   00

 000000CF 55 6E 73 6F 72	unsorted_prompt		  BYTE "Unsorted Points: ", 0
	   74 65 64 20 50
	   6F 69 6E 74 73
	   3A 20 00


				INCLUDE io.h            ; header file for input/output
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 
				INCLUDE debug.h			; for outputW macro
			      C INCLUDE io.h
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 
			      C 
 = 0000000D		      C CR          EQU    0Dh   ; carriage return character
 = 0000000A		      C LF          EQU    0Ah   ; linefeed character
			      C 
 000000E1		      C .DATA
 000000E1 0D 0A 00	      C carriage    BYTE     CR, LF, 0 
 000000E4  0000000D [	      C text        BYTE     13 DUP(?)
	    00
	   ]
			      C 
			      C outputW    	MACRO   var
			      C                    itoa text, var
			      C                    output text
			      C                    output carriage
			      C                 ENDM
			      C 
			      C outputD  	MACRO  var
			      C                    dtoa text, var
			      C                    output text
			      C                    output carriage
			      C          	ENDM
			      C 
			      C inputW          MACRO  prompt, location
			      C                    output prompt
			      C                    input text, 8
			      C                    atoi text
			      C                    mov location, ax
			      C                 ENDM
			      C 
			      C inputD          MACRO  prompt, location
			      C                    output prompt
			      C                    input text, 13
			      C                    atod text
			      C                    mov location, eax
			      C                 ENDM
			      C 
				INCLUDE float.h
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE sort_points.h
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE interpolate.h
			      C .NOLIST
			      C .LIST
			      C 


 00000000			.CODE
 00000000			_start:
 00000000
				input	inputString, WORD PTR 8	; get input for X_COORDINATE
				atof    inputString, X_COORDINATE

				inputW	inputPrompt, POLYNOMIAL_DEGREE	; get the polynomial degree

 0000005E  8D 1D 0000000C R	lea 			ebx, POINTS_ARRAY	
 00000064  66| C7 05		mov 			NUM_POINTS, 0		; counter for how many points we have
	   00000000 R
	   0000
					
 0000006D			inputPointsLoop:
					
						
					
					input inputString, WORD PTR 8
					
 00000081  80 3D 000000B2 R		cmp 		inputString, "q"
	   71
 00000088  74 44			je 			done
					
					atof 		inputString, inputPoint
 0000009E  8B 0D 000000AC R		mov 		ecx, inputPoint
 000000A4  89 0B			mov 		[ebx], ecx		; add the float to the POINTS_ARRAY
 000000A6  83 C3 04			add 		ebx, 4
					
					ftoa 		inputPoint, WORD PTR 3, WORD PTR 10, inputString
 000000C5  66| FF 05			inc			NUM_POINTS
	   00000000 R
					
 000000CC  EB 9F			jmp inputPointsLoop
					

 000000CE			done:

 000000CE  66| BA 0000			mov dx, 0
 000000D2  66| A1			mov ax, NUM_POINTS
	   00000000 R
 000000D8  66| B9 0002			mov cx, 2
 000000DC  66| F7 F1			div cx
 000000DF  66| A3			mov NUM_POINTS, ax	; now we have the appropriate amount of points
	   00000000 R
					

					output unsorted_prompt
					output carriage
					print_points POINTS_ARRAY, NUM_POINTS
					
					output carriage
					output carriage
					
					sort_points POINTS_ARRAY, X_COORDINATE, tol, NUM_POINTS 	; sort the points 
					
					output sorted_prompt
					output carriage
					print_points POINTS_ARRAY, NUM_POINTS
					
					
					interpolate_macro POINTS_ARRAY, POLYNOMIAL_DEGREE, X_COORDINATE   ; array, degree, x_coordinate
					
				INVOKE  ExitProcess, 0
					
 000001A5			PUBLIC _start

				END


















Microsoft (R) Macro Assembler Version 6.15.8803		    04/03/19 20:19:12
interpolate_driver.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atof . . . . . . . . . . . . . .	Proc
atoi . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
ftoa . . . . . . . . . . . . . .	Proc
inputD . . . . . . . . . . . . .	Proc
inputW . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
interpolate_macro  . . . . . . .	Proc
itoa . . . . . . . . . . . . . .	Proc
outputD  . . . . . . . . . . . .	Proc
outputW  . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
print_points . . . . . . . . . .	Proc
sort_points  . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000F1 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001A5 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$00001 . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001A5 Private
  inputPointsLoop  . . . . . . .	L Near	 0000006D _TEXT	
  done . . . . . . . . . . . . .	L Near	 000000CE _TEXT	
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CR . . . . . . . . . . . . . . .	Number	 0000000Dh   
LF . . . . . . . . . . . . . . .	Number	 0000000Ah   
NUM_POINTS . . . . . . . . . . .	Word	 00000000 _DATA	
POINTS_ARRAY . . . . . . . . . .	DWord	 0000000C _DATA	
POLYNOMIAL_DEGREE  . . . . . . .	Word	 00000002 _DATA	
X_COORDINATE . . . . . . . . . .	DWord	 00000004 _DATA	
_start . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atof_proc  . . . . . . . . . . .	L Near	 00000000 FLAT	External
atoiproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
carriage . . . . . . . . . . . .	Byte	 000000E1 _DATA	
done . . . . . . . . . . . . . .	L Near	 000000CE _TEXT	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
ftoa_proc  . . . . . . . . . . .	L Near	 00000000 FLAT	External
inproc . . . . . . . . . . . . .	L Near	 00000000 FLAT	External
inputPointsLoop  . . . . . . . .	L Near	 0000006D _TEXT	
inputPoint . . . . . . . . . . .	DWord	 000000AC _DATA	
inputPrompt  . . . . . . . . . .	Byte	 000000B0 _DATA	
inputString  . . . . . . . . . .	Byte	 000000B2 _DATA	
interpolate_proc . . . . . . . .	L Near	 00000000 FLAT	External
itoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
outproc  . . . . . . . . . . . .	L Near	 00000000 FLAT	External
print_points_proc  . . . . . . .	L Near	 00000000 FLAT	External
sort_points_proc . . . . . . . .	L Near	 00000000 FLAT	External
sorted_prompt  . . . . . . . . .	Byte	 000000BF _DATA	
text . . . . . . . . . . . . . .	Byte	 000000E4 _DATA	
tol  . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
unsorted_prompt  . . . . . . . .	Byte	 000000CF _DATA	

	   0 Warnings
	   0 Errors
